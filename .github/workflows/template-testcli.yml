name: Test CLI

on:
  workflow_call:
    inputs:
      vmImage:
        required: false
        default: 'windows-latest'
        type: string
      rnwVersion:
        required: false
        default: 'latest'
        type: string
      useRnwNuGet:
        required: false
        default: false
        type: boolean
      rnVersion:
        required: false
        default: 'latest'
        type: string

jobs:
  testcli:
    name: New RNW@${{ inputs.rnwVersion }} App from ${{ inputs.useRnwNuGet && 'NuGet' || 'Source' }}
    runs-on: ${{ inputs.vmImage }}
    steps:
    - uses: actions/checkout@v3

    - name: yarn install
      run: yarn install

    - name: build TS
      run: yarn build

    - name: yarn link
      run: yarn link
      working-directory: package

    - name: create react-native@${{ inputs.rnVersion }} app
      run: npx @react-native-community/cli init testrnx --version ${{ inputs.rnVersion }} --skip-install --install-pods false --verbose --skip-git-init true
      working-directory: ../

    - name: yarn install
      run: yarn install
      working-directory: ../testrnx

    - name: add Windows (RNW via ${{ inputs.useRnwNuGet && 'NuGet' || 'Source' }})
      run: npx react-native-windows-init --overwrite ${{ inputs.useRnwNuGet && '--experimentalNuGetDependency true' || '' }}
      working-directory: ../testrnx

    - name: link react-native-xaml
      run: yarn link react-native-xaml
      working-directory: ../testrnx

    - name: add react-native-xaml
      run: yarn add react-native-xaml
      working-directory: ../testrnx

    - name: autolink
      run: npx @react-native-community/cli autolink-windows --logging
      working-directory: ../testrnx

    - name: build app
      run: npx @react-native-community/cli run-windows --no-launch --no-deploy --no-packager --logging
      working-directory: ../testrnx

    - name: test app
      run: yarn test
      working-directory: ../testrnx
